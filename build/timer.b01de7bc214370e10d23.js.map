{"version":3,"sources":["webpack:///./scripts/task3/task-3.js","webpack:///./scripts/task3/CountdownTimer.js"],"names":["selector","targetDate","this","intervalId","timer","document","querySelector","days","hours","mins","secs","start","setInterval","currentTime","Date","now","time","clearInterval","updateTimerFace","getTimeComponent","pad","Math","floor","value","String","padStart","textContent"],"mappings":"6IAIc,I,WCHZ,cAAsC,IAAxBA,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WACtBC,KAAKC,WAAa,KAClBD,KAAKD,WAAaA,EAClBC,KAAKF,SAAWA,EACfE,KAAKE,MAAQC,SAASC,cAAcN,GAClCE,KAAKK,KAAOF,SAASC,cAAiBN,EAA1B,wBACZE,KAAKM,MAAQH,SAASC,cAAiBN,EAA1B,yBACbE,KAAKO,KAAOJ,SAASC,cAAiBN,EAA1B,wBACZE,KAAKQ,KAAOL,SAASC,cAAiBN,EAA1B,wB,2BAGjBW,MAAA,WAAQ,WACDT,KAAKE,QAIVF,KAAKC,WAAaS,aAAY,WAC5B,EAAKC,YAAcC,KAAKC,MACxB,IAAMC,EAAO,EAAKf,WAAa,EAAKY,YAChCG,EAAO,EACTC,cAAc,EAAKd,YAGrB,EAAKe,gBAAgB,EAAKC,iBAAiBH,MAC1C,O,EAGLG,iBAAA,SAAiBH,GA4Bf,MAAO,CAAET,KAvBIL,KAAKkB,IAAIC,KAAKC,MAAMN,EAAO,QAuBzBR,MAhBDN,KAAKkB,IACjBC,KAAKC,MAAON,EAAO,MAAR,OAeSP,KARTP,KAAKkB,IAAIC,KAAKC,MAAON,EAAO,KAAR,MAQLN,KAFfR,KAAKkB,IAAIC,KAAKC,MAAON,EAAO,IAAe,Q,EAK1DI,IAAA,SAAIG,GACF,OAAOC,OAAOD,GAAOE,SAAS,EAAG,M,EAGnCP,gBAAA,YAA6C,IAA3BX,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACnCR,KAAKK,KAAKmB,YAAcnB,EACxBL,KAAKM,MAAMkB,YAAclB,EACzBN,KAAKO,KAAKiB,YAAcjB,EACxBP,KAAKQ,KAAKgB,YAAchB,G,KD/Dd,CAAmB,CAC/BV,SAAU,WACVC,WAAY,IAAIa,KAAK,kBAGjBH,U","file":"timer.b01de7bc214370e10d23.js","sourcesContent":["import '../../styles.css';\r\n\r\nimport CountdownTimer from './CountdownTimer';\r\n\r\nconst Timer = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Jan 01, 2021'),\r\n});\r\n\r\nTimer.start();\r\n","export default class CountdownTimer {\r\n  constructor({ selector, targetDate }) {\r\n    this.intervalId = null;\r\n    this.targetDate = targetDate;\r\n    this.selector = selector;\r\n    (this.timer = document.querySelector(selector)),\r\n      (this.days = document.querySelector(`${selector} [data-value=\"days\"]`)),\r\n      (this.hours = document.querySelector(`${selector} [data-value=\"hours\"]`)),\r\n      (this.mins = document.querySelector(`${selector} [data-value=\"mins\"]`)),\r\n      (this.secs = document.querySelector(`${selector} [data-value=\"secs\"]`));\r\n  }\r\n\r\n  start() {\r\n    if (!this.timer) {\r\n      return;\r\n    }\r\n\r\n    this.intervalId = setInterval(() => {\r\n      this.currentTime = Date.now();\r\n      const time = this.targetDate - this.currentTime;\r\n      if (time < 0) {\r\n        clearInterval(this.intervalId);\r\n        return;\r\n      }\r\n      this.updateTimerFace(this.getTimeComponent(time));\r\n    }, 1000);\r\n  }\r\n\r\n  getTimeComponent(time) {\r\n    /*\r\n     * Оставшиеся дни: делим значение UTC на 1000 * 60 * 60 * 24, количество\r\n     * миллисекунд в одном дне (миллисекунды * секунды * минуты * часы)\r\n     */\r\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n\r\n    /*\r\n     * Оставшиеся часы: получаем остаток от предыдущего расчета с помощью оператора\r\n     * остатка % и делим его на количество миллисекунд в одном часе\r\n     * (1000 * 60 * 60 = миллисекунды * минуты * секунды)\r\n     */\r\n    const hours = this.pad(\r\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n    );\r\n\r\n    /*\r\n     * Оставшиеся минуты: получаем оставшиеся минуты и делим их на количество\r\n     * миллисекунд в одной минуте (1000 * 60 = миллисекунды * секунды)\r\n     */\r\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n\r\n    /*\r\n     * Оставшиеся секунды: получаем оставшиеся секунды и делим их на количество\r\n     * миллисекунд в одной секунде (1000)\r\n     */\r\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n    return { days, hours, mins, secs };\r\n  }\r\n\r\n  pad(value) {\r\n    return String(value).padStart(2, '0');\r\n  }\r\n\r\n  updateTimerFace({ days, hours, mins, secs }) {\r\n    this.days.textContent = days;\r\n    this.hours.textContent = hours;\r\n    this.mins.textContent = mins;\r\n    this.secs.textContent = secs;\r\n  }\r\n}\r\n"],"sourceRoot":""}